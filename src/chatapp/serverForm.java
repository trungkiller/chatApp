/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatapp;

import chatapp.showImage;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Label;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author dell
 */
public class serverForm extends javax.swing.JFrame {

    ServerSocket serverSocket;
    Socket socketText;
    Socket socketFile;
    BufferedReader br;
    PrintStream ps;
    Thread thServer;
    Thread thImg;
    ObjectOutputStream out;
    ObjectInputStream in;
    FileInputStream fs;
    DefaultListModel mod = new DefaultListModel();

    /**
     * Creates new form serverForm
     */
    public serverForm() {
        initComponents();
        chatArea.setEditable(false);
        txtPort.setText("9999");
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        creatPort = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtChat = new javax.swing.JTextField();
        sentButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        chatArea = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        open = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(720, 400));

        jLabel1.setText("Port:");

        txtPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPortActionPerformed(evt);
            }
        });

        creatPort.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon_start.png"))); // NOI18N
        creatPort.setText("Start");
        creatPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creatPortActionPerformed(evt);
            }
        });

        jLabel2.setText("Messenge:");

        txtChat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtChatKeyPressed(evt);
            }
        });

        sentButton.setText("Send");
        sentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sentButtonActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(chatArea);

        jScrollPane3.setViewportView(list);

        open.setText("Open");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("File đã nhận:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtChat, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sentButton)
                        .addGap(99, 99, 99)
                        .addComponent(open))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(creatPort)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(creatPort))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(open))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void printLeft(String text) throws BadLocationException {
        StyledDocument doc = chatArea.getStyledDocument();
        SimpleAttributeSet left = new SimpleAttributeSet();
        StyleConstants.setAlignment(left, StyleConstants.ALIGN_LEFT);
        StyleConstants.setForeground(left, Color.BLACK);

        doc.setParagraphAttributes(doc.getLength(), 1, left, false);
        doc.insertString(doc.getLength(), text, left);

    }

    void printRight(String text) throws BadLocationException {
        StyledDocument doc = chatArea.getStyledDocument();

        SimpleAttributeSet right = new SimpleAttributeSet();
        StyleConstants.setAlignment(right, StyleConstants.ALIGN_RIGHT);
        StyleConstants.setForeground(right, Color.BLUE);

        doc.setParagraphAttributes(doc.getLength(), 1, right, false);
        doc.insertString(doc.getLength(), text, right);
    }


    private void txtPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPortActionPerformed

    private void creatPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creatPortActionPerformed

        list.setModel(mod);
        try {

//            if (!"".equals(txtPort.getText())) {
            JOptionPane.showMessageDialog(chatArea, "Creat server successful!");
            serverSocket = new ServerSocket(Integer.parseInt(txtPort.getText()));
            socketText = serverSocket.accept();

            in = new ObjectInputStream(socketText.getInputStream());

            br = new BufferedReader(new InputStreamReader(socketText.getInputStream()));
            ps = new PrintStream(socketText.getOutputStream());

            txtPort.setEditable(false);
            printLeft("Connected!\n");
            getData();
            getImage();           

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(serverForm.this, ex, "Error", JOptionPane.ERROR_MESSAGE);
        } catch (BadLocationException ex) {
            JOptionPane.showMessageDialog(serverForm.this, ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
//             }
//         }).start();

    }//GEN-LAST:event_creatPortActionPerformed

    public void getData() {
        thServer = new Thread(new Runnable() {
            @Override
            public void run() {

                String content;
               
                try {
                    while((content = in.readUTF()) != null) {
                       // System.out.println(""+content + "conten");
                        printLeft(content + "\n");
                    }
//                    while (true) {
//                        data = (Data) in.readObject();
//                        mod.addElement(data);
//                        printLeft("Receive 1 Image...\n");
//                    }

                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(serverForm.this, ex, "Error", JOptionPane.ERROR_MESSAGE);
                } catch (BadLocationException ex) {
                    JOptionPane.showMessageDialog(serverForm.this, ex, "Error", JOptionPane.ERROR_MESSAGE);
                }

            }
        });
        thServer.start();
    }

    public void getImage() {

        thImg = new Thread(new Runnable() {
            @Override
            public void run() {
                Data data;
                try {

                   

                    while (true) {
                        data = (Data) in.readObject();
                        mod.addElement(data);
                        //mod.addElement(obj);
                        printLeft("Receive 1 Image...\n");
                    }
//                        while (true) {
//                           
//                        }

                } catch (BadLocationException ex) {
                    JOptionPane.showMessageDialog(serverForm.this, ex, "Error", JOptionPane.ERROR_MESSAGE);
                } catch (IOException ex) {
                    Logger.getLogger(serverForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(serverForm.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
        thImg.start();
    }

    public void open() {
        Data data = (Data) mod.getElementAt(list.getSelectedIndex());
        if (data.getStatus().equals("Image")) {
            showImage obj = new showImage(this, true);
            ImageIcon icon = new ImageIcon(data.getFile());

            obj.set(icon);
            obj.setVisible(true);
        }
    }

    private void sentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sentButtonActionPerformed

        if (!"".equals(txtChat.getText())) {
            ps.println(txtChat.getText());
            try {
                printRight(txtChat.getText() + "\n");

                //chatArea.append("You: " + txtChat.getText() + "\n");
            } catch (BadLocationException ex) {
                Logger.getLogger(clientForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        txtChat.setText("");
    }//GEN-LAST:event_sentButtonActionPerformed

    private void txtChatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChatKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!"".equals(txtChat.getText())) {
                ps.println(txtChat.getText());
                try {
                    printRight(txtChat.getText() + "\n");

                    //chatArea.append("You: " + txtChat.getText() + "\n");
                } catch (BadLocationException ex) {
                    Logger.getLogger(clientForm.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
            txtChat.setText("");
        }
    }//GEN-LAST:event_txtChatKeyPressed

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        // TODO add your handling code here:
        if (!list.isSelectionEmpty()) {
            open();
        }
    }//GEN-LAST:event_openActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(serverForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(serverForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(serverForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(serverForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new serverForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane chatArea;
    private javax.swing.JButton creatPort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> list;
    private javax.swing.JButton open;
    private javax.swing.JButton sentButton;
    private javax.swing.JTextField txtChat;
    private javax.swing.JTextField txtPort;
    // End of variables declaration//GEN-END:variables
}
